	<div class="container" data-section-id="{{ section.id }}" data-section-type="cart-template" data-flow-cart-container>

  {% if cart.item_count > 0 %}
    <div class="section-header text-center">
      <h1>{{ 'cart.general.title' | t }}</h1>
    </div>

    <form action="/cart" id="cartformspyder" method="post" novalidate class="cart bfx-checkout-container">
      <span class="hide bfx-customData-label">userAgent</span>
      <span class="hide bfx-customData-value" id="orderUserAgent"></span>
      <table>
        <thead class="cart__row cart__header">
          <th colspan="2">{{ 'cart.label.product' | t }}</th>
          <th>{{ 'cart.label.price' | t }}</th>
          <th class="text-center">{{ 'cart.label.quantity' | t }}</th>
          <th class="text-right">{{ 'cart.label.total' | t }}</th>
        </thead>
        <tbody>
          {% for item in cart.items %}
	            <tr data-flow-cart-item-number="{{ item.variant_id }}" class="cart__row border-bottom line{{ forloop.index }} cart-flex{% if forloop.first %} border-top{% endif %} bfx-product">
              <td class="cart__image-wrapper">
                <span class="bfx-product-customData-label hide">variant_id</span>
                <span class="bfx-product-customData-value hide">{{ item.variant_id }}</span>
                <a href="{{ item.url | within: collections.all }}">
                  <img class="cart__image" src="{{ item | img_url: '100x' }}" alt="{{ item.title | escape }}">
                </a>
              </td>
              <td class="cart__meta small--text-left">
                <div class="list-view-item__title">
                  <a href="{{ item.url }}" class="bfx-product-name">
                    {{ item.product.title }}
                    {% if item.quantity > 1 %}
                      <span class="hidden-md-up"><span class="visually-hidden">{{ 'cart.label.quantity' | t }}</span>({{ item.quantity }})</span>
                    {% endif %}
                  </a>
                </div>
                {% unless item.variant.title contains 'Default' %}
                  <div class="cart__meta-text">
                    {% for option in item.product.options %}
                      {{ option }}: {{ item.variant.options[forloop.index0] }}</br>
                    {% endfor %}
                  </div>
                {% endunless %}

                {% comment %}
                  Optional, loop through custom product line items if available

                  Line item properties come in as having two parts. The first part will be passed with the default form,
                  but p.last is the actual custom property and may be blank. If it is, don't show it.

                  For more info on line item properties, visit:
                    - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
                {% endcomment %}
                {%- assign property_size = item.properties | size -%}
                {% if property_size > 0 %}
                  <div class="cart__meta-text">
                    {% for p in item.properties %}
                      {% unless p.last == blank %}
                        {{ p.first }}:

                        {% comment %}
                          Check if there was an uploaded file associated
                        {% endcomment %}
                        {% if p.last contains '/uploads/' %}
                          <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                        {% else %}
                          {{ p.last }}
                        {% endif %}
                      {% endunless %}
                    {% endfor %}
                  </div>
                {% endif %}

                <p class="hidden-sm-down">
                  <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="btn btn--small btn--secondary cart__remove" onclick="Flow.beacon.processEvent('cart_remove', params, { xhr: true })">{{ 'cart.general.remove' | t }}</a>
                </p>
              </td>
              <td class="cart__price-wrapper bfx-price-product">
                <span class=" bfx-sku hide">{{ item.variant_id }}</span>
	                <span class="bfx-price bfx-list-price" data-flow-localize="cart-item-price">{{ item.price | money }}</span>

                {% for discount in item.discounts %}
                  <div class="cart-item__discount hidden-md-up">{{ discount.title }}</div>
                {% endfor %}

                <div class="cart__edit hidden-md-up">
                  <button type="button" class="btn btn--secondary btn--small js-edit-toggle cart__edit--active" data-target="line{{ forloop.index }}">
                    <span class="cart__edit-text--edit">{{ 'cart.general.edit' | t }}</span>
                    <span class="cart__edit-text--cancel">{{ 'cart.general.cancel' | t }}</span>
                  </button>
                </div>
              </td>
              <td class="cart__update-wrapper text-right">
                <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="btn btn--small btn--secondary cart__remove hidden-md-up" onclick="Flow.beacon.processEvent('cart_remove', params, { xhr: true })">{{ 'cart.general.remove' | t }}</a>
                <div class="cart__qty">
                  <label for="updates_{{ item.key }}" class="cart__qty-label">{{ 'cart.label.quantity' | t }}</label>
                  <input class="cart__qty-input bfx-product-qty" type="number" name="updates[]" id="updates_{{ item.key }}" value="{{ item.quantity }}" min="0" pattern="[0-9]*">
                </div>
                <input type="submit" name="update" class="btn btn--small cart__update hidden-md-up" value="{{ 'cart.general.update' | t }}">
              </td>
              <td class="text-right hidden-sm-down">
                 {% if cart.attributes.flow_metafield_key %}
                {% if item.original_line_price != item.line_price %}
	                  <div class="cart-item__original-price" data-flow-localize=”item-price-attribute”><s>{{ item.original_line_price | money }}</s></div>	
                {% endif %}
                {% endif %}

	                <div>	
                  <span data-flow-localize="cart-item-line-total">{{ item.line_price | money }}</span>	
                </div>

                {% for discount in item.discounts %}
                  <div class="cart-item__discount">{{ discount.title }}</div>
                {% endfor %}
              </td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <footer class="container cart__footer">
        <div class="row">
          {% if section.settings.cart_notes_enable %}
            <div class="col-md-30 cart-note">
              <label for="CartSpecialInstructions" class="cart-note__label small--text-center">{{ 'cart.general.note' | t }}</label>
              <textarea name="note" id="CartSpecialInstructions" class="cart-note__input">{{ cart.note }}</textarea>
            </div>
          {% endif %}
          <div class="text-right small--text-center{% if section.settings.cart_notes_enable %} col-md-30{% else %} col{% endif %}">
            <div>
              <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}</span>
	              <span class="cart__subtotal"><span data-flow-localize="cart-subtotal">{{ cart.total_price | money }}</span></span>
            </div>
            <div id="cart-afterpay"></div>
            {% if cart.total_discounts > 0 %}
              <div class="cart__savings">
                {{ 'cart.general.savings' | t }}
	                <span class="cart__savings-amount" data-flow-localize="cart-discount">{{ cart.total_discounts | money }}</span>
              </div>
            {% endif %}
            <div class="cart__shipping">{{ 'cart.general.shipping_at_checkout' | t }}</div>
            <input type="submit" name="update" class="btn btn--secondary cart__update cart__update--large hidden-sm-down" value="{{ 'cart.general.update' | t }}">
	            <input style="display:none;"  type="submit" id="deskbutt" name="checkout" class="btn btn--small-wide bfx-checkout" value="{{ 'cart.general.checkout' | t }}" >
            <input style="display:none;"  type="submit" id="modbutt" name="checkout" class="btn btn--small-wide bfx-checkout" value="{{ 'cart.general.checkout' | t }}">

	            <input id="nonflowco" type="submit" name="checkout" class="btn btn--small-wide bfx-checkout" value="{{ 'cart.general.checkout' | t }}">            

            {% if additional_checkout_buttons %}
            {% unless cart.attributes.flow_metafield_key %}	
              <div class="additional-checkout-buttons">{{ content_for_additional_checkout_buttons }}</div>
            {% endunless %}
            {% endif %}
          </div>
        </div>
      </footer>
    </form>
  {% else %}
    <div class="empty-page-content text-center">
      <h1>{{ 'cart.general.title' | t }}</h1>
      <p>{{ 'cart.general.empty' | t }}</p>
      <a href="/" class="btn btn--has-icon-after">{{ 'general.404.link' | t }}{% include 'icon-arrow-right' %}</a>
    </div>
  {% endif %}
</div>
	<script type="application/json" id="flow_shopify_cart">{{ cart | json }}</script>	
<script>    
    Flow.set('on', 'ready', function () {
      if(Flow.getExperience()) { 
        $('#deskbutt').show();
        $('#modbutt').show();
        $('#nonflowco').hide();
      Flow.cart.localize({    
        success: function () {    
          console.log('cart localized');    
        },    
      });
//           var buttonpressed;
//    $('.btn').click(function() {
//          buttonpressed = $(this).attr('name');
//    })
 
        $('#modbutt').click(function(){
      $( "#cartformspyder" ).submit(function( e ) {
        e.preventDefault(); 
        console.log('flow checkout redirect');
        Flow.checkout.redirect();
      });
    })
        
    $('#deskbutt').click(function(){
      $( "#cartformspyder" ).submit(function( e ) {
        e.preventDefault(); 
        console.log('flow checkout redirect');
        Flow.checkout.redirect();
      });
    })
 //   if(buttonpressed == "checkout"){
  //    $( "#cartformspyder" ).submit(function( e ) {
  //      e.preventDefault(); 
   //     console.log('flow checkout redirect');
    //    Flow.checkout.redirect();
   ///   });   
    }
  // }
});
</script>
<style>
  @media only screen and (min-width: 600px) {
  #modbutt {display:none !important;}
  }
  
  @media only screen and (max-width: 600px) {
  #deskbutt{display:none !important;}}
  
  .afterpay-paragraph {
    padding-left:70%;
    padding-top:16px;
  }
  @media only screen and (max-width: 1024px) {
    .afterpay-paragraph {
      padding-left:50%;
    }    
  }
  @media only screen and (max-width: 800px) {
    .afterpay-paragraph {
      padding-left:20%;
    }    
  }
  @media only screen and (max-width: 600px) {
    .afterpay-paragraph {
      padding-left:0;
    }    
  }
  
</style>

<script type="application/javascript" src="https://static-us.afterpay.com/javascript/present-afterpay.js"></script>

<script>
const apConfig = {
 'priceSelector': "#cart-afterpay",   // REQUIRED: set to the div
 'locale': 'en_US',            // REQUIRED: set to the locale for your site
 'afterpayLogoColor': 'black', // optional: set to use black or white logo
 'amount': {{ cart.total_price }},              // optional: set to item price or order total  
  'showUpperLimit': false
 };
      

new presentAfterpay(apConfig).init();
</script>

{% schema %}
  {
    "name": "Cart page",
    "settings": [
      {
        "type": "checkbox",
        "id": "cart_notes_enable",
        "label": "Enable cart notes",
        "default": false
      }
    ]
  }
{% endschema %}
